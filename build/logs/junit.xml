<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="Test Suite" tests="3" assertions="3" errors="1" failures="0" skipped="0" time="0.264014">
    <testsuite name="karlosagudo\Fixtro\Tests\CodeQualityTool\Checkers\CheckersRunnerTest" file="/home/karlos/workspace/fixtro/tests/CodeQualityTool/Checkers/CheckersRunnerTest.php" tests="3" assertions="3" errors="1" failures="0" skipped="0" time="0.264014">
      <testcase name="testCheckersRunner" class="karlosagudo\Fixtro\Tests\CodeQualityTool\Checkers\CheckersRunnerTest" classname="karlosagudo.Fixtro.Tests.CodeQualityTool.Checkers.CheckersRunnerTest" file="/home/karlos/workspace/fixtro/tests/CodeQualityTool/Checkers/CheckersRunnerTest.php" line="15" assertions="1" time="0.138884"/>
      <testcase name="testEventDispatcherRunner" class="karlosagudo\Fixtro\Tests\CodeQualityTool\Checkers\CheckersRunnerTest" classname="karlosagudo.Fixtro.Tests.CodeQualityTool.Checkers.CheckersRunnerTest" file="/home/karlos/workspace/fixtro/tests/CodeQualityTool/Checkers/CheckersRunnerTest.php" line="27" assertions="2" time="0.105171"/>
      <testcase name="testEventStopSignalRunner" class="karlosagudo\Fixtro\Tests\CodeQualityTool\Checkers\CheckersRunnerTest" classname="karlosagudo.Fixtro.Tests.CodeQualityTool.Checkers.CheckersRunnerTest" file="/home/karlos/workspace/fixtro/tests/CodeQualityTool/Checkers/CheckersRunnerTest.php" line="43" assertions="0" time="0.019959">
        <error type="Error">karlosagudo\Fixtro\Tests\CodeQualityTool\Checkers\CheckersRunnerTest::testEventStopSignalRunner
Error: Class 'karlosagudo\Fixtro\Tests\CodeQualityTool\CodeExamples\Events\PostLoad' not found

/home/karlos/workspace/fixtro/src/CodeQualityTool/Contexts/CommandContext.php:162
/home/karlos/workspace/fixtro/src/CodeQualityTool/Contexts/CommandContext.php:149
/home/karlos/workspace/fixtro/src/CodeQualityTool/Contexts/CommandContext.php:46
/home/karlos/workspace/fixtro/tests/CodeQualityTool/Checkers/CheckersRunnerTest.php:55
</error>
        <system-out>Array
(
    [0] =&gt; stdClass
    [1] =&gt; Exception
    [2] =&gt; ErrorException
    [3] =&gt; Error
    [4] =&gt; ParseError
    [5] =&gt; TypeError
    [6] =&gt; ArithmeticError
    [7] =&gt; DivisionByZeroError
    [8] =&gt; Closure
    [9] =&gt; Generator
    [10] =&gt; ClosedGeneratorException
    [11] =&gt; DateTime
    [12] =&gt; DateTimeImmutable
    [13] =&gt; DateTimeZone
    [14] =&gt; DateInterval
    [15] =&gt; DatePeriod
    [16] =&gt; LibXMLError
    [17] =&gt; ReflectionException
    [18] =&gt; Reflection
    [19] =&gt; ReflectionFunctionAbstract
    [20] =&gt; ReflectionFunction
    [21] =&gt; ReflectionGenerator
    [22] =&gt; ReflectionParameter
    [23] =&gt; ReflectionType
    [24] =&gt; ReflectionMethod
    [25] =&gt; ReflectionClass
    [26] =&gt; ReflectionObject
    [27] =&gt; ReflectionProperty
    [28] =&gt; ReflectionExtension
    [29] =&gt; ReflectionZendExtension
    [30] =&gt; LogicException
    [31] =&gt; BadFunctionCallException
    [32] =&gt; BadMethodCallException
    [33] =&gt; DomainException
    [34] =&gt; InvalidArgumentException
    [35] =&gt; LengthException
    [36] =&gt; OutOfRangeException
    [37] =&gt; RuntimeException
    [38] =&gt; OutOfBoundsException
    [39] =&gt; OverflowException
    [40] =&gt; RangeException
    [41] =&gt; UnderflowException
    [42] =&gt; UnexpectedValueException
    [43] =&gt; RecursiveIteratorIterator
    [44] =&gt; IteratorIterator
    [45] =&gt; FilterIterator
    [46] =&gt; RecursiveFilterIterator
    [47] =&gt; CallbackFilterIterator
    [48] =&gt; RecursiveCallbackFilterIterator
    [49] =&gt; ParentIterator
    [50] =&gt; LimitIterator
    [51] =&gt; CachingIterator
    [52] =&gt; RecursiveCachingIterator
    [53] =&gt; NoRewindIterator
    [54] =&gt; AppendIterator
    [55] =&gt; InfiniteIterator
    [56] =&gt; RegexIterator
    [57] =&gt; RecursiveRegexIterator
    [58] =&gt; EmptyIterator
    [59] =&gt; RecursiveTreeIterator
    [60] =&gt; ArrayObject
    [61] =&gt; ArrayIterator
    [62] =&gt; RecursiveArrayIterator
    [63] =&gt; SplFileInfo
    [64] =&gt; DirectoryIterator
    [65] =&gt; FilesystemIterator
    [66] =&gt; RecursiveDirectoryIterator
    [67] =&gt; GlobIterator
    [68] =&gt; SplFileObject
    [69] =&gt; SplTempFileObject
    [70] =&gt; SplDoublyLinkedList
    [71] =&gt; SplQueue
    [72] =&gt; SplStack
    [73] =&gt; SplHeap
    [74] =&gt; SplMinHeap
    [75] =&gt; SplMaxHeap
    [76] =&gt; SplPriorityQueue
    [77] =&gt; SplFixedArray
    [78] =&gt; SplObjectStorage
    [79] =&gt; MultipleIterator
    [80] =&gt; SessionHandler
    [81] =&gt; __PHP_Incomplete_Class
    [82] =&gt; php_user_filter
    [83] =&gt; Directory
    [84] =&gt; AssertionError
    [85] =&gt; PDOException
    [86] =&gt; PDO
    [87] =&gt; PDOStatement
    [88] =&gt; PDORow
    [89] =&gt; DOMException
    [90] =&gt; DOMStringList
    [91] =&gt; DOMNameList
    [92] =&gt; DOMImplementationList
    [93] =&gt; DOMImplementationSource
    [94] =&gt; DOMImplementation
    [95] =&gt; DOMNode
    [96] =&gt; DOMNameSpaceNode
    [97] =&gt; DOMDocumentFragment
    [98] =&gt; DOMDocument
    [99] =&gt; DOMNodeList
    [100] =&gt; DOMNamedNodeMap
    [101] =&gt; DOMCharacterData
    [102] =&gt; DOMAttr
    [103] =&gt; DOMElement
    [104] =&gt; DOMText
    [105] =&gt; DOMComment
    [106] =&gt; DOMTypeinfo
    [107] =&gt; DOMUserDataHandler
    [108] =&gt; DOMDomError
    [109] =&gt; DOMErrorHandler
    [110] =&gt; DOMLocator
    [111] =&gt; DOMConfiguration
    [112] =&gt; DOMCdataSection
    [113] =&gt; DOMDocumentType
    [114] =&gt; DOMNotation
    [115] =&gt; DOMEntity
    [116] =&gt; DOMEntityReference
    [117] =&gt; DOMProcessingInstruction
    [118] =&gt; DOMStringExtend
    [119] =&gt; DOMXPath
    [120] =&gt; finfo
    [121] =&gt; PharException
    [122] =&gt; Phar
    [123] =&gt; PharData
    [124] =&gt; PharFileInfo
    [125] =&gt; SimpleXMLElement
    [126] =&gt; SimpleXMLIterator
    [127] =&gt; XMLReader
    [128] =&gt; XMLWriter
    [129] =&gt; XSLTProcessor
    [130] =&gt; ComposerAutoloaderInitc12c5559c8a0c38d330f8d0ea9d2b394
    [131] =&gt; Composer\Autoload\ClassLoader
    [132] =&gt; Composer\Autoload\ComposerStaticInitc12c5559c8a0c38d330f8d0ea9d2b394
    [133] =&gt; PHPUnit\TextUI\Command
    [134] =&gt; PHPUnit\Util\Getopt
    [135] =&gt; PHPUnit\Util\Configuration
    [136] =&gt; PHPUnit\Util\Xml
    [137] =&gt; PHPUnit\Util\Printer
    [138] =&gt; PHPUnit\TextUI\ResultPrinter
    [139] =&gt; PHPUnit\Util\Fileloader
    [140] =&gt; PHPUnit\Framework\TestSuite
    [141] =&gt; File_Iterator_Facade
    [142] =&gt; File_Iterator_Factory
    [143] =&gt; File_Iterator
    [144] =&gt; PHPUnit\Framework\Assert
    [145] =&gt; PHPUnit\Framework\TestCase
    [146] =&gt; karlosagudo\Fixtro\Tests\CodeQualityTool\Checkers\CheckersRunnerTest
    [147] =&gt; PHPUnit\Runner\BaseTestRunner
    [148] =&gt; PHPUnit\Util\Test
    [149] =&gt; karlosagudo\Fixtro\Tests\CodeQualityTool\Checkers\GeneralCheckerTestCase
    [150] =&gt; karlosagudo\Fixtro\Tests\CodeQualityTool\Checkers\CodeStyleFixerTest
    [151] =&gt; karlosagudo\Fixtro\Tests\CodeQualityTool\Checkers\ComposerCheckerTest
    [152] =&gt; karlosagudo\Fixtro\Tests\CodeQualityTool\Checkers\EsLintCheckerTest
    [153] =&gt; karlosagudo\Fixtro\Tests\CodeQualityTool\Checkers\NamespaceFixerTest
    [154] =&gt; karlosagudo\Fixtro\Tests\CodeQualityTool\Checkers\PhpLintTest
    [155] =&gt; karlosagudo\Fixtro\Tests\CodeQualityTool\Checkers\PhpMessDetectorTest
    [156] =&gt; karlosagudo\Fixtro\Tests\CodeQualityTool\Checkers\PhpUnitTest
    [157] =&gt; karlosagudo\Fixtro\Tests\CodeQualityTool\Checkers\PsAlmCheckerTest
    [158] =&gt; karlosagudo\Fixtro\Tests\CodeQualityTool\Checkers\StrictDeclareTest
    [159] =&gt; GoodExecutedTest
    [160] =&gt; karlosagudo\Fixtro\Tests\CodeQualityTool\Commands\GeneralCommandTest
    [161] =&gt; PHPUnit_Framework_MockObject_MockBuilder
    [162] =&gt; PHPUnit_Framework_MockObject_Generator
    [163] =&gt; Symfony\Component\Console\Output\Output
    [164] =&gt; Text_Template
    [165] =&gt; Mock_Output_7601ae60
    [166] =&gt; Doctrine\Instantiator\Instantiator
    [167] =&gt; PHPUnit\Framework\DataProviderTestSuite
    [168] =&gt; karlosagudo\Fixtro\Tests\CodeQualityTool\FilterFiles\GeneralFiltersTest
    [169] =&gt; PHPUnit\TextUI\TestRunner
    [170] =&gt; SebastianBergmann\CodeCoverage\Filter
    [171] =&gt; SebastianBergmann\Environment\Runtime
    [172] =&gt; PHPUnit\Framework\TestResult
    [173] =&gt; SebastianBergmann\Environment\Console
    [174] =&gt; PHPUnit\Runner\Version
    [175] =&gt; SebastianBergmann\Version
    [176] =&gt; SebastianBergmann\CodeCoverage\CodeCoverage
    [177] =&gt; SebastianBergmann\CodeCoverage\Driver\Xdebug
    [178] =&gt; SebastianBergmann\CodeUnitReverseLookup\Wizard
    [179] =&gt; PHPUnit\Util\Log\JUnit
    [180] =&gt; PHPUnit\Framework\TestSuiteIterator
    [181] =&gt; PHPUnit\Util\ErrorHandler
    [182] =&gt; PHP_Timer
    [183] =&gt; Symfony\Component\Console\Output\StreamOutput
    [184] =&gt; Symfony\Component\Console\Output\ConsoleOutput
    [185] =&gt; Mock_ConsoleOutput_49abfaf5
    [186] =&gt; PHPUnit_Framework_MockObject_Matcher_InvokedRecorder
    [187] =&gt; PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastOnce
    [188] =&gt; PHPUnit_Framework_MockObject_InvocationMocker
    [189] =&gt; PHPUnit_Framework_MockObject_Builder_InvocationMocker
    [190] =&gt; PHPUnit_Framework_MockObject_Matcher
    [191] =&gt; PHPUnit_Framework_MockObject_Matcher_StatelessInvocation
    [192] =&gt; PHPUnit_Framework_MockObject_Matcher_MethodName
    [193] =&gt; PHPUnit\Framework\Constraint\Constraint
    [194] =&gt; PHPUnit\Framework\Constraint\IsEqual
    [195] =&gt; SebastianBergmann\Exporter\Exporter
    [196] =&gt; karlosagudo\Fixtro\CodeQualityTool\Checker\AbstractChecker
    [197] =&gt; karlosagudo\Fixtro\CodeQualityTool\Checker\StrictDeclareFixer
    [198] =&gt; karlosagudo\Fixtro\CodeQualityTool\Contexts\CommandContext
    [199] =&gt; Psr\Log\AbstractLogger
    [200] =&gt; Symfony\Component\Console\Logger\ConsoleLogger
    [201] =&gt; Psr\Log\LogLevel
    [202] =&gt; Symfony\Component\EventDispatcher\EventDispatcher
    [203] =&gt; PHPUnit_Framework_MockObject_Invocation_Static
    [204] =&gt; PHPUnit_Framework_MockObject_Invocation_Object
    [205] =&gt; SebastianBergmann\Comparator\Factory
    [206] =&gt; SebastianBergmann\Comparator\Comparator
    [207] =&gt; SebastianBergmann\Comparator\TypeComparator
    [208] =&gt; SebastianBergmann\Comparator\ScalarComparator
    [209] =&gt; SebastianBergmann\Comparator\NumericComparator
    [210] =&gt; SebastianBergmann\Comparator\DoubleComparator
    [211] =&gt; SebastianBergmann\Comparator\ArrayComparator
    [212] =&gt; SebastianBergmann\Comparator\ResourceComparator
    [213] =&gt; SebastianBergmann\Comparator\ObjectComparator
    [214] =&gt; SebastianBergmann\Comparator\ExceptionComparator
    [215] =&gt; SebastianBergmann\Comparator\SplObjectStorageComparator
    [216] =&gt; SebastianBergmann\Comparator\DOMNodeComparator
    [217] =&gt; SebastianBergmann\Comparator\MockObjectComparator
    [218] =&gt; SebastianBergmann\Comparator\DateTimeComparator
    [219] =&gt; SebastianBergmann\Comparator\ComparisonFailure
    [220] =&gt; Symfony\Component\Yaml\Yaml
    [221] =&gt; Symfony\Component\Yaml\Parser
    [222] =&gt; Symfony\Component\Yaml\Inline
    [223] =&gt; Symfony\Component\Yaml\Unescaper
    [224] =&gt; karlosagudo\Fixtro\CodeQualityTool\Checker\CheckersRunner
    [225] =&gt; Symfony\Component\EventDispatcher\Event
    [226] =&gt; karlosagudo\Fixtro\CodeQualityTool\Events\FixtroEvent
    [227] =&gt; Symfony\Component\Process\ProcessBuilder
    [228] =&gt; Symfony\Component\Process\ProcessUtils
    [229] =&gt; Symfony\Component\Process\Process
    [230] =&gt; Symfony\Component\Process\Pipes\AbstractPipes
    [231] =&gt; Symfony\Component\Process\Pipes\UnixPipes
    [232] =&gt; SebastianBergmann\ObjectEnumerator\Enumerator
    [233] =&gt; SebastianBergmann\RecursionContext\Context
    [234] =&gt; PHPUnit_Framework_MockObject_Matcher_AnyParameters
    [235] =&gt; PHP_Token_Stream
    [236] =&gt; PHP_Token
    [237] =&gt; PHP_TokenWithScope
    [238] =&gt; PHP_TokenWithScopeAndVisibility
    [239] =&gt; PHP_Token_Includes
    [240] =&gt; PHP_Token_FUNCTION
    [241] =&gt; PHP_Token_INTERFACE
    [242] =&gt; PHP_Token_ABSTRACT
    [243] =&gt; PHP_Token_AMPERSAND
    [244] =&gt; PHP_Token_AND_EQUAL
    [245] =&gt; PHP_Token_ARRAY
    [246] =&gt; PHP_Token_ARRAY_CAST
    [247] =&gt; PHP_Token_AS
    [248] =&gt; PHP_Token_AT
    [249] =&gt; PHP_Token_BACKTICK
    [250] =&gt; PHP_Token_BAD_CHARACTER
    [251] =&gt; PHP_Token_BOOLEAN_AND
    [252] =&gt; PHP_Token_BOOLEAN_OR
    [253] =&gt; PHP_Token_BOOL_CAST
    [254] =&gt; PHP_Token_BREAK
    [255] =&gt; PHP_Token_CARET
    [256] =&gt; PHP_Token_CASE
    [257] =&gt; PHP_Token_CATCH
    [258] =&gt; PHP_Token_CHARACTER
    [259] =&gt; PHP_Token_CLASS
    [260] =&gt; PHP_Token_CLASS_C
    [261] =&gt; PHP_Token_CLASS_NAME_CONSTANT
    [262] =&gt; PHP_Token_CLONE
    [263] =&gt; PHP_Token_CLOSE_BRACKET
    [264] =&gt; PHP_Token_CLOSE_CURLY
    [265] =&gt; PHP_Token_CLOSE_SQUARE
    [266] =&gt; PHP_Token_CLOSE_TAG
    [267] =&gt; PHP_Token_COLON
    [268] =&gt; PHP_Token_COMMA
    [269] =&gt; PHP_Token_COMMENT
    [270] =&gt; PHP_Token_CONCAT_EQUAL
    [271] =&gt; PHP_Token_CONST
    [272] =&gt; PHP_Token_CONSTANT_ENCAPSED_STRING
    [273] =&gt; PHP_Token_CONTINUE
    [274] =&gt; PHP_Token_CURLY_OPEN
    [275] =&gt; PHP_Token_DEC
    [276] =&gt; PHP_Token_DECLARE
    [277] =&gt; PHP_Token_DEFAULT
    [278] =&gt; PHP_Token_DIV
    [279] =&gt; PHP_Token_DIV_EQUAL
    [280] =&gt; PHP_Token_DNUMBER
    [281] =&gt; PHP_Token_DO
    [282] =&gt; PHP_Token_DOC_COMMENT
    [283] =&gt; PHP_Token_DOLLAR
    [284] =&gt; PHP_Token_DOLLAR_OPEN_CURLY_BRACES
    [285] =&gt; PHP_Token_DOT
    [286] =&gt; PHP_Token_DOUBLE_ARROW
    [287] =&gt; PHP_Token_DOUBLE_CAST
    [288] =&gt; PHP_Token_DOUBLE_COLON
    [289] =&gt; PHP_Token_DOUBLE_QUOTES
    [290] =&gt; PHP_Token_ECHO
    [291] =&gt; PHP_Token_ELSE
    [292] =&gt; PHP_Token_ELSEIF
    [293] =&gt; PHP_Token_EMPTY
    [294] =&gt; PHP_Token_ENCAPSED_AND_WHITESPACE
    [295] =&gt; PHP_Token_ENDDECLARE
    [296] =&gt; PHP_Token_ENDFOR
    [297] =&gt; PHP_Token_ENDFOREACH
    [298] =&gt; PHP_Token_ENDIF
    [299] =&gt; PHP_Token_ENDSWITCH
    [300] =&gt; PHP_Token_ENDWHILE
    [301] =&gt; PHP_Token_END_HEREDOC
    [302] =&gt; PHP_Token_EQUAL
    [303] =&gt; PHP_Token_EVAL
    [304] =&gt; PHP_Token_EXCLAMATION_MARK
    [305] =&gt; PHP_Token_EXIT
    [306] =&gt; PHP_Token_EXTENDS
    [307] =&gt; PHP_Token_FILE
    [308] =&gt; PHP_Token_FINAL
    [309] =&gt; PHP_Token_FOR
    [310] =&gt; PHP_Token_FOREACH
    [311] =&gt; PHP_Token_FUNC_C
    [312] =&gt; PHP_Token_GLOBAL
    [313] =&gt; PHP_Token_GT
    [314] =&gt; PHP_Token_IF
    [315] =&gt; PHP_Token_IMPLEMENTS
    [316] =&gt; PHP_Token_INC
    [317] =&gt; PHP_Token_INCLUDE
    [318] =&gt; PHP_Token_INCLUDE_ONCE
    [319] =&gt; PHP_Token_INLINE_HTML
    [320] =&gt; PHP_Token_INSTANCEOF
    [321] =&gt; PHP_Token_INT_CAST
    [322] =&gt; PHP_Token_ISSET
    [323] =&gt; PHP_Token_IS_EQUAL
    [324] =&gt; PHP_Token_IS_GREATER_OR_EQUAL
    [325] =&gt; PHP_Token_IS_IDENTICAL
    [326] =&gt; PHP_Token_IS_NOT_EQUAL
    [327] =&gt; PHP_Token_IS_NOT_IDENTICAL
    [328] =&gt; PHP_Token_IS_SMALLER_OR_EQUAL
    [329] =&gt; PHP_Token_LINE
    [330] =&gt; PHP_Token_LIST
    [331] =&gt; PHP_Token_LNUMBER
    [332] =&gt; PHP_Token_LOGICAL_AND
    [333] =&gt; PHP_Token_LOGICAL_OR
    [334] =&gt; PHP_Token_LOGICAL_XOR
    [335] =&gt; PHP_Token_LT
    [336] =&gt; PHP_Token_METHOD_C
    [337] =&gt; PHP_Token_MINUS
    [338] =&gt; PHP_Token_MINUS_EQUAL
    [339] =&gt; PHP_Token_MOD_EQUAL
    [340] =&gt; PHP_Token_MULT
    [341] =&gt; PHP_Token_MUL_EQUAL
    [342] =&gt; PHP_Token_NEW
    [343] =&gt; PHP_Token_NUM_STRING
    [344] =&gt; PHP_Token_OBJECT_CAST
    [345] =&gt; PHP_Token_OBJECT_OPERATOR
    [346] =&gt; PHP_Token_OPEN_BRACKET
    [347] =&gt; PHP_Token_OPEN_CURLY
    [348] =&gt; PHP_Token_OPEN_SQUARE
    [349] =&gt; PHP_Token_OPEN_TAG
    [350] =&gt; PHP_Token_OPEN_TAG_WITH_ECHO
    [351] =&gt; PHP_Token_OR_EQUAL
    [352] =&gt; PHP_Token_PAAMAYIM_NEKUDOTAYIM
    [353] =&gt; PHP_Token_PERCENT
    [354] =&gt; PHP_Token_PIPE
    [355] =&gt; PHP_Token_PLUS
    [356] =&gt; PHP_Token_PLUS_EQUAL
    [357] =&gt; PHP_Token_PRINT
    [358] =&gt; PHP_Token_PRIVATE
    [359] =&gt; PHP_Token_PROTECTED
    [360] =&gt; PHP_Token_PUBLIC
    [361] =&gt; PHP_Token_QUESTION_MARK
    [362] =&gt; PHP_Token_REQUIRE
    [363] =&gt; PHP_Token_REQUIRE_ONCE
    [364] =&gt; PHP_Token_RETURN
    [365] =&gt; PHP_Token_SEMICOLON
    [366] =&gt; PHP_Token_SL
    [367] =&gt; PHP_Token_SL_EQUAL
    [368] =&gt; PHP_Token_SR
    [369] =&gt; PHP_Token_SR_EQUAL
    [370] =&gt; PHP_Token_START_HEREDOC
    [371] =&gt; PHP_Token_STATIC
    [372] =&gt; PHP_Token_STRING
    [373] =&gt; PHP_Token_STRING_CAST
    [374] =&gt; PHP_Token_STRING_VARNAME
    [375] =&gt; PHP_Token_SWITCH
    [376] =&gt; PHP_Token_THROW
    [377] =&gt; PHP_Token_TILDE
    [378] =&gt; PHP_Token_TRY
    [379] =&gt; PHP_Token_UNSET
    [380] =&gt; PHP_Token_UNSET_CAST
    [381] =&gt; PHP_Token_USE
    [382] =&gt; PHP_Token_USE_FUNCTION
    [383] =&gt; PHP_Token_VAR
    [384] =&gt; PHP_Token_VARIABLE
    [385] =&gt; PHP_Token_WHILE
    [386] =&gt; PHP_Token_WHITESPACE
    [387] =&gt; PHP_Token_XOR_EQUAL
    [388] =&gt; PHP_Token_HALT_COMPILER
    [389] =&gt; PHP_Token_DIR
    [390] =&gt; PHP_Token_GOTO
    [391] =&gt; PHP_Token_NAMESPACE
    [392] =&gt; PHP_Token_NS_C
    [393] =&gt; PHP_Token_NS_SEPARATOR
    [394] =&gt; PHP_Token_CALLABLE
    [395] =&gt; PHP_Token_INSTEADOF
    [396] =&gt; PHP_Token_TRAIT
    [397] =&gt; PHP_Token_TRAIT_C
    [398] =&gt; PHP_Token_FINALLY
    [399] =&gt; PHP_Token_YIELD
    [400] =&gt; PHP_Token_ELLIPSIS
    [401] =&gt; PHP_Token_POW
    [402] =&gt; PHP_Token_POW_EQUAL
    [403] =&gt; PHP_Token_COALESCE
    [404] =&gt; PHP_Token_SPACESHIP
    [405] =&gt; PHP_Token_YIELD_FROM
    [406] =&gt; PHP_Token_ASYNC
    [407] =&gt; PHP_Token_AWAIT
    [408] =&gt; PHP_Token_COMPILER_HALT_OFFSET
    [409] =&gt; PHP_Token_ENUM
    [410] =&gt; PHP_Token_EQUALS
    [411] =&gt; PHP_Token_IN
    [412] =&gt; PHP_Token_JOIN
    [413] =&gt; PHP_Token_LAMBDA_ARROW
    [414] =&gt; PHP_Token_LAMBDA_CP
    [415] =&gt; PHP_Token_LAMBDA_OP
    [416] =&gt; PHP_Token_ONUMBER
    [417] =&gt; PHP_Token_NULLSAFE_OBJECT_OPERATOR
    [418] =&gt; PHP_Token_SHAPE
    [419] =&gt; PHP_Token_SUPER
    [420] =&gt; PHP_Token_TYPE
    [421] =&gt; PHP_Token_TYPELIST_GT
    [422] =&gt; PHP_Token_TYPELIST_LT
    [423] =&gt; PHP_Token_WHERE
    [424] =&gt; PHP_Token_XHP_ATTRIBUTE
    [425] =&gt; PHP_Token_XHP_CATEGORY
    [426] =&gt; PHP_Token_XHP_CATEGORY_LABEL
    [427] =&gt; PHP_Token_XHP_CHILDREN
    [428] =&gt; PHP_Token_XHP_LABEL
    [429] =&gt; PHP_Token_XHP_REQUIRED
    [430] =&gt; PHP_Token_XHP_TAG_GT
    [431] =&gt; PHP_Token_XHP_TAG_LT
    [432] =&gt; PHP_Token_XHP_TEXT
    [433] =&gt; Mock_CommandContext_6e911c3c
    [434] =&gt; PHPUnit_Framework_MockObject_Stub_Return
)
</system-out>
      </testcase>
    </testsuite>
  </testsuite>
</testsuites>
